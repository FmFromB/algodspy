class Node:
    def __init__(self, data = None, left = None, right = None):
        self.data = data
        self.left = left
        self.right = right

class Tree:
    
    def __init__(self):
        self.root = none
    
    def new_node(self, data):
        return node(data, none, none)

    def tree_height(self, node):
        if node == none:
            return 0
        else:
            right_height = self.tree_Height(node.right)
            left_height = self.tree_Height(node.left)
            
            if right_height > left_height:
                return right_height + 1
            else:
                return left_height + 1

    def search(self, node, target):
        if node == none: 
            return 0
        else:
            if target == Node.data:
                return 1
            else:
                if target < Node.data:
                    return self.lookup(Node.left, target)

    def amount(node):
        if Node == none:
            return 0
        else:
            return size(node.left) + size(node.right) + 1
